name: Purge Events Execution
on:
  schedule:
    - cron: '1 * * * *'
    - cron: '15 * * * *'
    - cron: '30 * * * *'
    - cron: '45 * * * *'
  workflow_dispatch:
    inputs:
      function_name:
        type: string
        required: true
      AWS_REGION:
        description: 'AWS Regions (comma-separated)'
        required: false
      Instance:
        description: 'Instance IDs (comma-separated)'
        required: false
      cluster:
        description: 'Enter value of cluster'
        default: null
        required: false
      env:
        description: 'Enter value of env'
        default: null
        required: false
      service:
        description: 'Select the service (sor_cat or sor_ugc shovel)'
        type: string
        required: false

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  Recovery_workflow:
    concurrency:
      group: ${{ github.workflow }}-${{ github.run_id }}
      cancel-in-progress: false

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
            role-to-assume: arn:aws:iam::468552248569:role/TestingDataDog_role
            role-session-name: ExceutePythonscript
            aws-region: us-east-1
    
      - name: Install dependencies
        run: |
          python3 -m venv venv  # Create a virtual environment
          source venv/bin/activate  # Activate the virtual environment
          pip install --upgrade pip  # Upgrade pip
          pip install boto3 requests  # Install dependencies

      - name: Print inputs
        run: |
          echo "function_name is ${{ inputs.function_name }}"
          echo "region is ${{ inputs.AWS_REGION }}"
          echo "service is ${{ inputs.service }}"
    
      - name: Run script sor_ugc us 
        if: github.event.schedule == '1 * * * *'
        run: python3 executeScript.py "us-east-1" "sor_ugc" "${{ secrets.API_KEY }}" &

      - name: Run script sor_ugc eu 
        if: github.event.schedule == '15 * * * *'
        run: python3 executeScript.py "eu-west-1" "sor_ugc" "${{ secrets.API_KEY }}" &

      - name: Run script sor_cat us 
        if: github.event.schedule == '30 * * * *'
        run: python3 executeScript.py "us-east-1" "sor_cat" "${{ secrets.API_KEY }}" &

      - name: Run script sor_cat eu
        if: github.event.schedule == '45 * * * *'
        run: python3 executeScript.py "eu-west-1" "sor_cat" "${{ secrets.API_KEY }}" &

      - name: Run script on dispatch
        if: github.event_name == 'workflow_dispatch'
        run: |
          source venv/bin/activate
          python3 executeScript.py "${{inputs.AWS_REGION}}" "${{inputs.service}}" "${{ secrets.API_KEY }}" &
          wait
