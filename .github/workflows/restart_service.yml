name: Restart service
on:
  workflow_dispatch:
    inputs:
      Universe:
        type: string
        required: false
      AWS_REGIONS:
        type: string
        required: true
        description: 'Comma-separated list of AWS regions (e.g., us-east-1,us-west-2)'
      Instances:
        type: string
        required: true
        description: 'Comma-separated list of instance IDs (e.g., i-0123456789abcdef,i-fedcba9876543210)'

permissions:
  id-token: write
  contents: read
  actions: read

jobs:

  deploy-emoji-service:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: ${{ fromJson(inputs.AWS_REGIONS) }}
        instance: ${{ fromJson(inputs.Instances) }}
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v3

      - name: Printing inputs
        run: |
          echo "Universe: ${{ inputs.Universe }}"
          echo "AWS Region: ${{ matrix.region }}"
          echo "Instance: ${{ matrix.instance }}"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::549050352176:role/TestingDataDog_role
          role-session-name: restartservice
          aws-region: ${{ matrix.region }}

      - name: Printing using sh
        run: |
          chmod +x ./ssmcmd.sh
          ./ssmcmd.sh ${{ matrix.region }} ${{ matrix.instance }} 
  
        
           

      
      # - name: Checkout repository with library file
      #   uses: actions/checkout@v4
      #   with:
      #     repository: bvengineering/ActionsLibraryHub
      #     ref: main
      #     path: LibraryHub
      #     token: ${{ secrets.TOKEN }}

      # - name: Fetch data 
      #   run: |
      #       label=$(python ./LibraryHub/EmodbLib.py getVpcByUniverse "${{inputs.Universe}}")
      #       account_id=$(python ./LibraryHub/EmodbLib.py getAccountIdByUniverse "${{inputs.Universe}}")
      #       echo "EnvTag=$label" >> $GITHUB_ENV;echo "AccId=$account_id" >> $GITHUB_ENV
            
      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #       role-to-assume: arn:aws:iam::${{env.AccId}}:role/deployCFNResource
      #       role-session-name: emojiServiceSession
      #       aws-region: ${{ inputs.AWS_REGION }}

      # - name: Printing using sh
      #   run: |
      #     chmod +x ./list_buckets.sh
      #     ./list_buckets.sh
    
      # - name: Printing using py
      #   run: |
      #     python test.py

      # - name: Alert to slack
      #   uses: 8398a7/action-slack@v3
      #   if: ${{ always() }}
      #   with:
      #     status: ${{ job.status }}
      #     fields: repo,message,job,workflow
      #     author_name: The workflow at ${{ github.repository }} on branch ${{ github.ref_name }} is ${{ job.status }}
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      # - name: Send PagerDuty alert on failure
      #   if: ${{ failure() }}
      #   uses: Entle/action-pagerduty-alert@0.2.0
      #   with:
      #     pagerduty-integration-key: '${{ secrets.PD_KEY }}'
      #     pagerduty-dedup-key: github_workflow_failed